/*
Dealer Name: IMT
System Name:
System Number:
Programmer: Kiel Lofstrand
Comments:
*/

// COMPILER DIRECTIVES /////////////////////////////////////////////////////////////////////

#DEFAULT_VOLATILE
#ENABLE_STACK_CHECKING
#ENABLE_TRACE
// #DIGITAL_EXPAND 
// #ANALOG_SERIAL_EXPAND 

/*
#HELP_BEGIN
   (add additional lines of help lines)
#HELP_END
*/

// LIBRARIES ///////////////////////////////////////////////////////////////////////////////

#USER_SIMPLSHARP_LIBRARY "AtemLib"

// INPUTS //////////////////////////////////////////////////////////////////////////////////

DIGITAL_INPUT Connect;
DIGITAL_INPUT Disconnect;
DIGITAL_INPUT Cut;
DIGITAL_INPUT Auto;
ANALOG_INPUT  Preview_Source;

// OUTPUTS /////////////////////////////////////////////////////////////////////////////////

DIGITAL_OUTPUT Connect_Fb;

// SOCKETS /////////////////////////////////////////////////////////////////////////////////

// PARAMETERS //////////////////////////////////////////////////////////////////////////////

INTEGER_PARAMETER Port_Number;
STRING_PARAMETER  Address[100];

// STRUCTURES //////////////////////////////////////////////////////////////////////////////

AtemMini AtemConsole;

// GLOBAL VARIABLES ////////////////////////////////////////////////////////////////////////

INTEGER giReady;

// FUNCTIONS ///////////////////////////////////////////////////////////////////////////////

// EVENT HANDLERS //////////////////////////////////////////////////////////////////////////

PUSH Connect
{
	giReady = 0;
	AtemConsole.Connect();
	AtemConsole.Hello();
}

PUSH Disconnect
{
	giReady = 0;
	Connect_Fb = giReady;
	AtemConsole.Close();
}

PUSH Cut
{
	If (giReady)
	{
		AtemConsole.Cut();
	}
}

PUSH Auto
{
	If (giReady)
	{
		AtemConsole.Auto();
	}
}

CHANGE Preview_Source
{
	If (giReady)
	{
		AtemConsole.SetPreview(Preview_Source);
	}
}

// CALLBACKS AND DELEGATES /////////////////////////////////////////////////////////////////

EVENTHANDLER ReadyEventHandler(AtemMini sender, EventArgs args)
{
	giReady = 1;
	Connect_Fb = giReady;
}

// MAIN ////////////////////////////////////////////////////////////////////////////////////

FUNCTION Main()
{
	WaitForInitializationComplete();

	AtemConsole.Initialize(Address, Port_Number);
	RegisterEvent(AtemConsole, ReadyEvent, ReadyEventHandler);
}
